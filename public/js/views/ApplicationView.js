// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

define(['backbone', 'collections/UsersCollection', 'views/UsersTableView'], function(backbone, UsersCollection, UsersTableView) {
  var ApplicationView;
  return ApplicationView = (function(superClass) {
    extend(ApplicationView, superClass);

    function ApplicationView() {
      return ApplicationView.__super__.constructor.apply(this, arguments);
    }

    ApplicationView.prototype.el = '#content';

    ApplicationView.prototype.template = null;

    ApplicationView.prototype.initialize = function() {
      var users, usersView;
      users = new UsersCollection;
      usersView = new UsersTableView({
        collection: users
      });
      users.fetch({
        success: function() {
          return usersView.updateData();
        }
      });
      this.template = usersView.render().$el;
      return this.render();
    };

    ApplicationView.prototype.render = function() {
      $(this.el).html(this.template);
      return this;
    };

    return ApplicationView;

  })(Backbone.View);
});
